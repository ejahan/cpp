






// demotion > regagner en precision
// promotion > perdre en precision

const -> plus precis

	/*static cast*/ truc = static_cast<type>(src)
pour les valeurs simples
pas ouf pour class sauf si diff arbres heritages 

	/*dynamic cast*/ truc = dynamic_cast<type>(src)
-> pendant l execution donc peut echouer
fonctionne que dans le cas de polymorphisme (une fonction membre est virtual)
si erreur -> return NULL

	/*reinterpret cast*/ truc = reinterpret_cast<type>(src) 
cast le plus permissif
si faux -> peut crash
souvent pour retypage (char * -> void * -> char *)

	/*const cast*/ truc = const_cast<type>(src)
capable transformation qualifieur de type
-> pas ouf

	/*cast operator*/
definir dans les class des operateurs specifiques pour faire des conversions \
implicites de notre class vers un type

operator type()
{
	blablabla
}
/*ex:
class a;
int b = a;
*/

	/*explicite*/
interdit la construction implicite d une class 